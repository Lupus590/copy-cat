--- EncodedWritableHandle.java
+++ EncodedWritableHandle.java
@@ -5,6 +5,7 @@
  */
 package dan200.computercraft.core.apis.handles;
 
+import cc.squiddev.cct.stub.WritableByteChannel;
 import dan200.computercraft.api.lua.IArguments;
 import dan200.computercraft.api.lua.LuaException;
 import dan200.computercraft.api.lua.LuaFunction;
@@ -14,12 +15,7 @@
 import java.io.BufferedWriter;
 import java.io.Closeable;
 import java.io.IOException;
-import java.nio.channels.Channels;
-import java.nio.channels.WritableByteChannel;
-import java.nio.charset.Charset;
-import java.nio.charset.CharsetEncoder;
-import java.nio.charset.CodingErrorAction;
-import java.nio.charset.StandardCharsets;
+import java.io.OutputStreamWriter;
 
 /**
  * A file handle opened by {@link dan200.computercraft.core.apis.FSAPI#open} using the {@code "w"} or {@code "a"} modes.
@@ -101,9 +97,10 @@
 
     public static BufferedWriter openUtf8( WritableByteChannel channel )
     {
-        return open( channel, StandardCharsets.UTF_8 );
+        return new BufferedWriter(new OutputStreamWriter(channel.asOutputStream()));
     }
 
+    /*
     public static BufferedWriter open( WritableByteChannel channel, Charset charset )
     {
         // Create a charset encoder with the same properties as StreamEncoder does for
@@ -113,4 +110,5 @@
             .onUnmappableCharacter( CodingErrorAction.REPLACE );
         return new BufferedWriter( Channels.newWriter( channel, encoder, -1 ) );
     }
+    */
 }
