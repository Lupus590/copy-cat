--- ComputerThread.java
+++ ComputerThread.java
@@ -294,7 +294,7 @@
     private static void afterWork( TaskRunner runner, ComputerExecutor executor )
     {
         // Clear the executor's thread.
-        Thread currentThread = executor.executingThread.getAndSet( null );
+        Thread currentThread = null;
         if( currentThread != runner.owner )
         {
             ComputerCraft.log.error(
@@ -375,8 +375,6 @@
                                 if( !running ) continue;
 
                                 // Mark the old runner as dead and start a new one.
-                                ComputerCraft.log.warn( "Previous runner ({}) has crashed, restarting!",
-                                    runner != null && runner.owner != null ? runner.owner.getName() : runner );
                                 if( runner != null ) runner.running = false;
                                 runnerFactory.newThread( runners[i] = new TaskRunner() ).start();
                             }
@@ -478,9 +476,9 @@
 
                 // If we're trying to executing some task on this computer while someone else is doing work, something
                 // is seriously wrong.
-                while( !executor.executingThread.compareAndSet( null, owner ) )
+                while (Thread.currentThread() == Thread.currentThread())
                 {
-                    Thread existing = executor.executingThread.get();
+                    Thread existing = Thread.currentThread();
                     if( existing != null )
                     {
                         ComputerCraft.log.error(
